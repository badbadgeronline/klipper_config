## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                             [mcu] section
## Thermistor types                      [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location             [homing_override] section
## Z Endstop Switch  offset for Z0       [stepper_z] section
## PID tune                              [extruder] and [heater_bed] sections
## Fine tune E steps                     [extruder] section

##===================================================================.

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]
[display_status]

[mcu]
###Change to device found by "ls -l /dev/serial/by-id/" with just one this MCU connected to Pi
serial: /dev/serial/by-id/usb-Klipper_lpc1769_09F0000268944BAFBF697D5DC62000F5-if00

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: c6654bedd2ea
          
[include mainsail.cfg]
[include stealthburner_leds.cfg]
[exclude_object]
[include Adaptive_Mesh.cfg]

[printer]
kinematics: corexy
max_velocity: 100 #300
max_accel: 1000 #5000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0  

#####################################################################
#   A/B Stepper Settings
#####################################################################\

######
#X motor slot on main board (B Drive - Left side looking from front)
###############
[stepper_x]
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## X_UART_PIN         1.10
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
endstop_pin: EBBCan:PB6
position_min: 10

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: P1.10
run_current: 0.4 #1.100

##===================================================================

######
#Y motor slot on main board (A Drive - Right side when looking from front)
###############
[stepper_y]
## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## Y_UART_RX          1.9
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 400
endstop_pin: P1.28
position_min: 10

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: P1.9
run_current: 0.4 #1.100

#####################################################################
#   Z Stepper Settings
#####################################################################

##T8x4 Lead Screws.  One rotation moves the bed 4mm 
##Change according to integrated steppers purchased

######
# Z motor slot on the main board (Front Left Z Motor)
###############
[stepper_z]
## Z_STEP_PIN         0.22   
## Z_DIR_PIN          2.11   
## Z_ENABLE_PIN       0.21    
## Z_UART             1.8
step_pin: P0.22
dir_pin: !P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 4
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
#  endstop_pin: P1.27 Removed to use BLTouch instead
#  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
#  (+) value = endstop above Z0, (-) value = endstop below
#  Increasing position_endstop brings nozzle closer to the bed
#  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: +1.85
## All builds use same Max Z
position_max: 250
position_max: 250
position_min: -6
homing_speed: 35.0

[tmc2209 stepper_z]
uart_pin: P1.8
run_current: 0.650

##===================================================================

######
# E0 motor slot on the main board board (Rear Z Motor)
###############
[stepper_z1]
## E0_STEP_PIN         2.13    
## E0_DIR_PIN          0.11   
## E0_ENABLE_PIN       2.12    
## E0_UART             1.4
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200

[tmc2209 stepper_z1]
uart_pin: P1.4
run_current: 0.650

##===================================================================

######
# E1 motor slot on main board (Front Right Z Motor)
###############
[stepper_z2]
## E1_STEP_PIN         1.15    
## E1_DIR_PIN          1.14   
## E1_ENABLE_PIN       1.16    
## E1_UART             1.1
step_pin: P1.15
dir_pin: !P1.14
enable_pin: !P1.16
microsteps: 16
rotation_distance: 4
full_steps_per_rotation: 200

[tmc2209 stepper_z2]
uart_pin: P1.1
run_current: 0.650

######
# Extruder on SB2290 CANBUS
###############

[extruder]
max_extrude_cross_section: 50
max_extrude_only_distance: 700.00
step_pin: EBBCan:PD0
dir_pin: !EBBCan:PD1
enable_pin: !EBBCan:PD2
microsteps: 16
# Tune per individual printer
# Default for Bondtech 5mm Bore Drive Gears
rotation_distance: 22.614316 # 23.0758326 Tested extruder only #22.678951 Suggested
#rotation_distance: 33.500 # from SB file
full_steps_per_rotation: 200
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.035 #0.67
pressure_advance_smooth_time: 0.040

heater_pin: EBBCan:PB13
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: EBBCan:PA3
#control: pid
#pid_Kp: 21.527 # from SB2900 Config
#pid_Ki: 1.063 # from SB2900 Config
#pid_Kd: 108.982 # from SB2900 Config
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
min_extrude_temp: 170
min_temp: 0
max_temp: 300

sensor_type: MAX31865
sensor_pin: EBBCan:PA4
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:PA15
run_current: 0.650
stealthchop_threshold: 999999

#####################################################################
#   Bed Heater
#####################################################################   
[heater_bed]
## Fan 0 on main board
heater_pin: P2.3 
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
## TB on Main Board
sensor_pin: P0.25
##  Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Fan Control
#####################################################################

[fan]
pin: EBBCan:PA0

[heater_fan hotend_fan]
pin: EBBCan:PA1
heater: extruder
heater_temp: 50.0

#[heater_fan 4W_FAN0]
#pin: EBBCan:PB14
#tachometer_pin: EBBCan:PB15
#tachometer_ppr: 1

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
#timeout: 1800

[bltouch]
sensor_pin: ^EBBCan:PB8
control_pin: EBBCan:PB9
pin_move_time: 0.680
stow_on_each_sample: True
probe_with_touch_mode: False
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True
#set_output_mode:
#   Request a specific sensor pin output mode on the BLTouch V3.0 (and
#   later). This setting should not be used on other types of probes.
#   Set to "5V" to request a sensor pin output of 5 Volts (only use if
#   the controller board needs 5V mode and is 5V tolerant on its input
#   signal line). Set to "OD" to request the sensor pin output use
#   open drain mode. The default is to not request an output mode.
x_offset: -34.5 # Suggested on the build page -32.8
y_offset: 9.5 # Suggested in the build page -8.8
#z_offset: 3.2
speed: 2
#lift_speed:
samples: 2
#sample_retract_dist:
#samples_result:
#samples_tolerance:
#samples_tolerance_retries:
#   See the "probe" section for information on these parameters.

[safe_z_home]
home_xy_position: 150,150  # Positon to conduct probe, middle of the bed
speed: 50
z_hop: 10    # Move up 10mm
z_hop_speed: 5

##[homing_override] Changed to safe_z_home in SB config
##axes: z
##set_position_z: 0
##gcode:
##   G90
##   G0 Z5 F600
##   G28 X Y
   ##   XY Location of the Z Endstop Switch
   ##   Update X and Y to your values (such as X157, Y305) after going through
   ##   Z Endstop Pin Location Definition step.
   # G0 X169 Y300 F3600 This is the physical Z endstop loaction
##  G0 X150 Y150 F3600
   
##   G28 Z
##   G0 Z10 F1800

    ##  Rough measurement is the middle of your bed.  
    ##  Uncomment for 300 build
    # G0 X150 Y150 Z30 F3600 Not required as probing occurs at this location

#####################################################################
#   Displays and Sensors
#####################################################################

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:PA2

[temperature_sensor raspberry_pi]
## Pi Temps
sensor_type: temperature_host
max_temp: 100

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: x,y,z

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan:PC13

#[output_pin PB5]
#pin: EBBCan:PB5

#[output_pin PB7]
#pin: EBBCan:PB7

#[output_pin PB6]
#pin: EBBCan:PB6

#####################################################################
#   Macros
#####################################################################

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

z_positions:
   -50, 18
   150, 348
   350, 18
points:
   74.5, 10
   184.5, 245
   294.5, 10

speed: 200
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075

##===================================================================

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)

##===================================================================

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    #{% set chambertemp = params.CHAMBER|default(0)|int %}

    M117 Homing...                 ; display message
    G28 Y0 X0 Z0

    M190 S{bedtemp}                                                              ; set & wait for bed temp
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
    M117 Homing...                 ; display message
    G28 Y0 X0 Z0
    M117 Z Tilt Adjust...
    Z_TILT_ADJUST
    M117 Bed Mesh...
    BED_MESH_CALIBRATE
    M117 Heating Hotend
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp
    ##Purge Line Gcode
    M117 Purging
    G92 E0;
    G90
    G0 X10 Y10 F6000
    G0 Z0.4
    G91
    G1 X120 E30 F1200;
    G1 Y1
    G1 X-120 E30 F1200;
    G92 E0;
    G90
    M117 Printing...

[gcode_macro _SET_FAN_SPEED]
gcode:
    M106 S{ (params.PERCENT | float) * 255 / 100 }


[gcode_macro CENTER]
gcode:
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } Z{ printer.toolhead.axis_maximum.z/2 } F7200


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y-20} F3600   ; park nozzle at rear
    M117 Finished!

[gcode_macro HEAT_SOAK]
description: heats the bed for a while

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:
    {% set TARGET = params.TARGET | default(0) | float %}
    {% set DURATION = (params.DURATION | default(5) | int) * 60 %} ## minutes to seconds

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    ;; fire up the heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }

    ;; run the fan to circulate air
    _SET_FAN_SPEED PERCENT=50

    ;; put the bed and nozzle where they're a safe distance apart
    G28
    CENTER

    M84 ;; turn off steppers

    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1

[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}

    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }

    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}

    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }

        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"

    {% if stage in ("done", "cancel") %}

        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M107 ; turn off fan

            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
        {% endif %}

        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0

    {% else %}

        {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}

        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }

        ## dwell for 1ms to prevent from going idle
        G4 P1

    {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.175
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 30.284
#*# pid_ki = 1.068
#*# pid_kd = 214.639
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.871
#*# pid_ki = 0.976
#*# pid_kd = 145.910
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.018750, 0.035000, 0.056250, 0.037500, 0.030625
#*# 	-0.066250, 0.010000, 0.037500, 0.028750, 0.006250
#*# 	-0.102500, -0.030000, 0.000000, 0.014375, -0.001250
#*# 	-0.126875, -0.040000, 0.001250, 0.028125, 0.007500
#*# 	-0.088750, -0.058750, 0.011250, 0.010625, 0.051250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 40.0
#*# max_y = 260.0
